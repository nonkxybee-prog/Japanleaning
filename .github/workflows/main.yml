name: Build and Deploy React App to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Find and extract project
        run: |
          # 查找zip文件并解压
          ZIP_FILE=$(find . -name "*.zip" -type f | head -1)
          if [ -n "$ZIP_FILE" ]; then
            echo "Found zip file: $ZIP_FILE"
            mkdir -p ./temp_extract
            unzip "$ZIP_FILE" -d ./temp_extract
            
            # 查找包含package.json的目录
            PACKAGE_DIR=$(find ./temp_extract -name "package.json" -type f | head -1 | xargs dirname)
            
            if [ -n "$PACKAGE_DIR" ]; then
              echo "Found React project in: $PACKAGE_DIR"
              cp -r "$PACKAGE_DIR"/* ./
              echo "Project files copied to root"
              ls -la
            else
              echo "No package.json found, this might not be a React project"
              exit 1
            fi
          else
            echo "No zip file found!"
            exit 1
          fi

      - name: Install dependencies
        run: |
          if [ -f "package.json" ]; then
            npm install
          else
            echo "No package.json found!"
            exit 1
          fi

      - name: Build project
        run: |
          # 尝试不同的构建命令
          if npm run build; then
            echo "Build successful with 'npm run build'"
          elif npm run build:prod; then
            echo "Build successful with 'npm run build:prod'"
          else
            echo "Build failed, checking available scripts:"
            cat package.json | grep -A 10 '"scripts"'
            exit 1
          fi

      - name: Prepare build output
        run: |
          # 查找构建输出目录
          if [ -d "dist" ]; then
            echo "Using dist directory"
            BUILD_DIR="dist"
          elif [ -d "build" ]; then
            echo "Using build directory"
            BUILD_DIR="build"
          else
            echo "No build output directory found!"
            echo "Available directories:"
            ls -la
            exit 1
          fi
          
          # 创建部署目录
          mkdir -p ./deploy
          cp -r "$BUILD_DIR"/* ./deploy/
          
          echo "Build output prepared:"
          ls -la ./deploy/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deploy'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
